<script id="vs" type="x-shader/x-vertex">
  
  attribute vec3 position;
  attribute float id;
  
  uniform mat4 mvpMatrix;
  uniform float zKeisu;
  uniform float time;
  uniform float rx;
  uniform float ry;
  uniform float rz;
  uniform vec3 rgb;
  
  varying float vGlay;
  varying vec3 vRGB;
  
  void main() {
    
    vec3 pos = vec3(0.0);
    
    float radian = (id + time) * 0.05;
    pos.z = position.z + sin(radian) * rz;
    pos.x = position.x + (sin(radian) * rx * pos.z);
    pos.y = position.y + (cos(radian) * ry * pos.z);
    gl_Position = mvpMatrix * vec4(pos, 1.0);
    
    float fl = 800.0;
    gl_PointSize = max(1.0, 0.1 * (fl / (fl / pos.z * 0.75)));
    
    vGlay = pow(clamp(abs(pos.z * zKeisu), 0.5, 2.0), 50.0);
    vRGB = rgb;
  }
  
</script>
<script id="fs" type="x-shader/x-fragment">
  
  precision highp float;
  
  uniform float alpha;
  
  varying float vGlay;
  varying vec3 vRGB;
  
  vec3 hsv2rgb(vec3 c) {
    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
  }
  
  void main() {
    
    gl_FragColor = vec4(vRGB + vGlay, alpha);
  
  }
  
</script>